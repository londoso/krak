AWSTemplateFormatVersion: 2010-09-09

Parameters:
  #EC2 Parameters
  InstanceTypeParameter:
    Type: String
    Default: t3a.micro
    Description: Instance size for the linux instance.
  AMI:
    Type: String
    Default: ami-047a51fa27710816e
    Description: Amazon Linux 2 AMI.
  Key:
    Type: String
    Default: krak
    Description: The key used to access the instance.
  #RDS Parameters
  DBName:
    Default: Master
    Description: Database name for Master
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBNameReplica:
    Default: Replica
    Description: Database name for Replica
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Default: anderson
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Default: pasS123crak
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '20'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '20'
    MaxValue: '16384'
    ConstraintDescription: must be between 20 and 16384Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.micro
    ConstraintDescription: must select a valid database instance type.
  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Target VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: SubnetA

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTableA

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      Tags:
        - Key: Name
          Value: SG Linux Instance
      VpcId: !Ref VPC

  LinuxInstance:
    Type: AWS::EC2::Instance
    DependsOn: MasterDB 
    Properties:
      ImageId: !Ref AMI
      InstanceType:
        Ref: InstanceTypeParameter
      KeyName: !Ref Key
      SubnetId: !Ref SubnetA
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 5
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              CONF="~/pgconfing.ini"
              echo "# Config Postgresql DB Parameters" > "$CONF"
              cat <<EOT >> "$CONF"
              [postgresql]
              EOT
              sudo chown ec2-user:ec2-user /home/ec2-user/pgconfing.ini
              sudo chmod 600 /home/ec2-user/pgconfing.ini
              echo "host=${MasterEndPoint}" >> $CONF
              echo "port=${MasterPort}" >> $CONF
              echo "database=${MasterDBName}" >> $CONF
              echo "user=${MasterDBUser}" >> $CONF
              echo "password=${MasterDBPassword}" >> $CONF
              sudo yum install -y wget tar gcc make python3 git
              echo "export bucket=${BucketS3}" >> /home/ec2-user/.bash_profile && source /home/ec2-user/.bash_profile
              curl -O https://bootstrap.pypa.io/get-pip.py
              python3 get-pip.py --user
              pip install psycopg2-binary numpy pandas s3fs config
              wget https://ftp.postgresql.org/pub/source/v13.1/postgresql-13.1.tar.gz
              tar -zxvf postgresql-13.1.tar.gz
              cd postgresql-13.1/
              ./configure --without-readline --without-zlib
              make
              sudo make install
              sudo ln -sf /usr/local/pgsql/bin/psql /usr/bin/psql
              cd /home/ec2-user && git clone https://github.com/londoso/krak.git
              echo "export repo=/home/ec2-user/krak" >> /home/ec2-user/.bash_profile
              wget https://databank.worldbank.org/data/download/Edstats_csv.zip
              unzip Edstats_csv.zip
              aws s3 cp EdStatsData.csv s3://$bucket
            - MasterEndPoint: !GetAtt MasterDB.Endpoint.Address
              MasterPort: !GetAtt MasterDB.Endpoint.Port
              MasterDBName: !Ref DBName
              MasterDBUser: !Ref DBUser
              MasterDBPassword: !Ref DBPassword
              BucketS3: !Ref S3Bucket
      Tags:
        - Key: Appplication
          Value:  Linux Server
        - Key: Owner
          Value:  Anderson Londo√±o Osorio
      IamInstanceProfile: !Ref MyInstanceProfile

  Profile:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'

  MyInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - 
          Ref: Profile

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for RDS
      Tags:
        - Key: Name
          Value: SG RDS
      VpcId: !Ref VPC

  DBSecurityGroupIG1:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: DBSecurityGroup    
    Properties:
      GroupId: !GetAtt DBSecurityGroup.GroupId
      FromPort: 5432
      IpProtocol: tcp
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt InstanceSecurityGroup.GroupId
      Description: Enable DataBase access via port 5432 to EC2

  SubnetDB1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: SubnetDB1

  SubnetDB2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: SubnetDB2

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Managed DB subnet group.
      SubnetIds:
        - !Ref SubnetDB1
        - !Ref SubnetDB2

  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      DBInstanceIdentifier: !Ref DBName
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: postgres
      EngineVersion: 12
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      MultiAZ: !Ref MultiAZ
      Tags:
        - Key: Name
          Value: Master Database
      VPCSecurityGroups: 
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup

  ReplicaDB:
    Type: AWS::RDS::DBInstance
    Properties:
      SourceDBInstanceIdentifier: !Ref 'MasterDB'
      DBInstanceIdentifier: !Ref DBNameReplica
      DBInstanceClass: !Ref 'DBInstanceClass'
      Tags:
      - Key: Name
        Value: Read Replica Database

  IAMUser:
    Type: AWS::IAM::User

  IAMAcessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: IAMUser

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      
  IAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3BucketPermissions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: S3BucketPermissions
          Effect: Allow
          Action:
          - s3:*
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: S3Bucket
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: S3Bucket
              - "/*"
      Users:
      - Ref: IAMUser

Outputs:
  PublicIp:
    Value:
      Fn::GetAtt:
        - LinuxInstance
        - PublicIp
    Description: Linux Server Public Ip Address
  BucketUrl:
    Value: !Join 
      - ''
      - - 'https://console.aws.amazon.com/s3/buckets/'
        - !Ref S3Bucket
    Description: S3 bucket URL
  AWSAccessKeyId:
    Value:
      Ref: IAMAcessKey
  AWSSecretAccessKey:
    Value:
      Fn::GetAtt:
      - IAMAcessKey
      - SecretAccessKey
  BucketName:
    Value:
      Ref: S3Bucket
    Description: S3 bucket Name
  Region:
    Value:
      Ref: AWS::Region
  EndPointMaster:
    Description: RDS Master EndPoint.
    Value: !GetAtt MasterDB.Endpoint.Address
    Export:
      Name: RDS-Master